name: Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Create/Update CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file infra.yml \
            --stack-name my-ecommerce-stack \ # Give it a unique name
            --capabilities CAPABILITY_IAM \
            --parameter-overrides EnvironmentName=production KeyName=your_key_pair_name DBPassword=${{ secrets.DB_PASSWORD }} \ # Add parameters
            --region us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Tag Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t my-ecommerce-app .
          docker tag my-ecommerce-app:latest ${{ steps.login-ecr.outputs.registry }}/my-ecommerce-app-repo:$IMAGE_TAG # Use correct repo name

      - name: Push Docker Image to ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/my-ecommerce-app-repo:$IMAGE_TAG # Use correct repo name

      - name: Deploy to Elastic Beanstalk
        uses: einaregilsson/aws-elastic-beanstalk-deployment@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: my-ecommerce-app
          environment_name: production
          version_label: ${{ github.sha }}
          region: us-east-2

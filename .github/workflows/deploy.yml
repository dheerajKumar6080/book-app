name: Build and Deploy to Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout Code from the Repository
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up AWS Credentials
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      # Step 3: Trigger CloudFormation Stack to set up resources (VPC, RDS, EBS, etc.)
      - name: Create/Update CloudFormation Stack
        run: |
          aws cloudformation deploy \
            --template-file infra.yml \
            --stack-name my-stack \
            --capabilities CAPABILITY_IAM \
            --region us-east-2

      # Step 4: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      # Step 5: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t my-ecommerce-app .

      # Step 6: Tag Docker Image
      - name: Tag Docker Image
        run: |
          docker tag my-ecommerce-app:latest ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/my-ecommerce-app:latest

      # Step 7: Push Docker Image to Amazon ECR
      - name: Push Docker Image to ECR
        run: |
          docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-2.amazonaws.com/my-ecommerce-app:latest

      # Step 8: Deploy to Elastic Beanstalk
      - name: Deploy to Elastic Beanstalk
        uses: aws-actions/aws-elastic-beanstalk-deploy-action@v1
        with:
          application-name: my-ecommerce-app
          environment-name: production
          version-label: ${{ github.sha }}
          region: us-east-2
          bucket-name: elasticbeanstalk-us-east-2-${{ secrets.AWS_ACCOUNT_ID }}
